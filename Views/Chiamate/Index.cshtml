@* Views/Chiamate/Index.cshtml *@
@model List<WebApplicationCentralino.Models.Chiamata>

@{
    ViewData["Title"] = "Registro Chiamate";
    var chiamateFiltrate = Model ?? new List<WebApplicationCentralino.Models.Chiamata>();

}

<div class="container-fluid mt-4">
    <h2>Registro Chiamate</h2>

    <div class="card shadow my-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Elenco delle chiamate</h5>
            <div>
                <button class="btn btn-light mx-1" id="refreshButton">
                    <i class="bi bi-arrow-clockwise"></i> Aggiorna
                </button>
            </div>
        </div>

        <div class="card-body">
            <!-- Filtri -->
            <div class="row mb-4">
                <div class="col-md-3 mb-2">
                    <label for="dateFrom" class="form-label">Data da:</label>
                    <input type="date" id="dateFrom" class="form-control" value="@(ViewBag.DateFrom ?? DateTime.Today.ToString("yyyy-MM-dd"))">
                </div>
                <div class="col-md-3 mb-2">
                    <label for="dateTo" class="form-label">Data a:</label>
                    <input type="date" id="dateTo" class="form-control" value="@(ViewBag.DateTo ?? DateTime.Today.ToString("yyyy-MM-dd"))">
                </div>
                <div class="col-md-3 mb-2">
                    <label for="minDuration" class="form-label">Durata min (sec):</label>
                    <input type="number" id="minDuration" class="form-control" value="@(ViewBag.MinDuration ?? 5)" min="0" step="1">
                </div>
                <div class="col-md-3 d-flex align-items-end mb-2">
                    <button id="applyFilters" class="btn btn-primary w-100">
                        <i class="bi bi-filter"></i> Applica Filtri
                    </button>
                </div>
            </div>


            <div class="table-responsive">
                <table class="table table-striped table-hover w-100" id="tabellaChiamate">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Numero Chiamante</th>
                            <th>Ragione Sociale</th>
                            <th>Numero Chiamato</th>
                            <th>Ragione Sociale</th>
                            <th>Data Arrivo</th>
                            <th>Data Fine</th>
                            <th>Durata</th>
                            <th>Tipo</th>
                            <th>Locazione</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (chiamateFiltrate.Any())
                        {
                            @foreach (var chiamata in chiamateFiltrate)
                            {
                                <tr>
                                    <td>@chiamata.Id</td>
                                    <td>@(chiamata.NumeroChiamante ?? "-")</td>
                                    <td>@(chiamata.RagioneSocialeChiamante ?? "-")</td>
                                    <td>@(chiamata.NumeroChiamato ?? "-")</td>
                                    <td>@(chiamata.RagioneSocialeChiamato ?? "-")</td>
                                    <td>@(chiamata.DataArrivoChiamata.ToString("dd/MM/yyyy HH:mm:ss"))</td>
                                    <td>@(chiamata.DataFineChiamata.ToString("dd/MM/yyyy HH:mm:ss"))</td>
                                    <td>@(chiamata.Durata.TotalSeconds.ToString("N0")) sec</td>
                                    <td>
                                        <span class="badge @GetTipoChiamataBadgeClass(chiamata.TipoChiamata)">
                                            @(chiamata.TipoChiamata ?? "-")
                                        </span>
                                    </td>
                                    <td>@(chiamata.Locazione ?? "-")</td>
                                </tr>
                            }

                        }
                        else
                        {
                            <tr>
                                <td colspan="10" class="text-center">Nessuna chiamata trovata per la data odierna</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetTipoChiamataBadgeClass(string? tipoChiamata)
    {
        return tipoChiamata?.ToLower() switch
        {
            "in entrata" => "bg-success",
            "in uscita" => "bg-primary",
            "persa" => "bg-danger",
            "non risposta" => "bg-warning",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        let tabella;

        $(document).ready(function() {
            // Inizializza DataTables con opzioni avanzate
            tabella = $('#tabellaChiamate').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.13.4/i18n/it-IT.json"
                },
                "order": [[5, "desc"]], // Ordina per data di arrivo (decrescente)
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Tutti"]], // Opzioni per numero elementi
                "pageLength": 5, // Default a 5 elementi per pagina
                "scrollX": true, // Abilita lo scorrimento orizzontale per tabelle larghe
                "autoWidth": false, // Consente una migliore gestione manuale delle larghezze
                "columnDefs": [
                    { "width": "80px", "targets": 0 }, // ID
                    { "width": "120px", "targets": [1, 3] }, // Numeri telefonici
                    { "width": "180px", "targets": [2, 4] }, // Ragioni sociali
                    { "width": "150px", "targets": [5, 6] }, // Date
                    { "width": "80px", "targets": 7 }, // Durata
                    { "width": "100px", "targets": 8 }, // Tipo
                    { "width": "120px", "targets": 9 } // Locazione
                ]
            });

            // Gestisce il refresh della tabella
            $("#refreshButton").click(function() {
                location.reload();
            });

            // Gestione filtri per data
            $("#applyFilters").click(function() {
                let dateFrom = $("#dateFrom").val();
                let dateTo = $("#dateTo").val();
                let minDuration = $("#minDuration").val();

                // Reindirizza alla stessa pagina con parametri di query
                window.location.href = `@Url.Action("Index")?dateFrom=${dateFrom}&dateTo=${dateTo}&minDuration=${minDuration}`;
            });
        });
    </script>
}