@model WebApplicationCentralino.Models.Contatto
@{
    ViewData["Title"] = "Gestione Contatti";
}

<h2>@ViewData["Title"]</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">@(string.IsNullOrEmpty(Model.Id) ? "Nuovo Contatto" : "Modifica Contatto")</h5>
            </div>
            <div class="card-body">
                <form asp-action="Salva" method="post" id="formContatto">
                    <input type="hidden" asp-for="Id" />
                    
                    <div class="mb-3">
                        <label asp-for="NumeroContatto" class="form-label">Numero Contatto</label>
                        <input asp-for="NumeroContatto" class="form-control" required 
                               pattern="^\d{1,15}$" 
                               title="Inserire solo numeri (max 15 cifre)" />
                        <div class="form-text">Inserire solo numeri, massimo 15 cifre</div>
                        <span asp-validation-for="NumeroContatto" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ragione Sociale</label>
                        <div class="row">
                            <div class="col-md-6">
                                <input type="text" id="primaParte" class="form-control" placeholder="Es. Ufficio Tecnico" />
                            </div>
                            <div class="col-md-6">
                                <select id="secondaParte" class="form-select select2">
                                    <option value="">Nessun comune selezionato</option>
                                    <option value="custom">Inserisci testo personalizzato</option>
                                    @foreach (var comune in ViewBag.Comuni as Dictionary<string, string>)
                                    {
                                        <option value="Comune di @comune.Value">Comune di @comune.Key</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <input type="hidden" asp-for="RagioneSociale" id="ragioneSocialeCompleta" />
                        <div class="form-text">Inserisci la prima parte della ragione sociale e nella seconda parte: seleziona un comune o inserisci un testo personalizzato per indicare l'azienda del contatto.</div>
                        <span asp-validation-for="RagioneSociale" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Citta" class="form-label">Città</label>
                        <input asp-for="Citta" class="form-control" 
                               pattern="^[A-Za-z\s']+$"
                               title="Inserire solo lettere" />
                        <div class="form-text">Inserire solo lettere, senza numeri</div>
                        <span asp-validation-for="Citta" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Interno" class="form-label">Tipologia Linea</label>
                        <select asp-for="Interno" class="form-select" required>
                            <option value="">Seleziona...</option>
                            <option value="1">Interno</option>
                            <option value="0">Esterno</option>
                        </select>
                        <div class="form-text">
                            <strong>Interno:</strong> numero telefonico interno al centralino<br>
                            <strong>Esterno:</strong> numero telefonico esterno al centralino
                        </div>
                        <span asp-validation-for="Interno" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Salva
                        </button>
                        <a asp-controller="Contatti" asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-x-circle"></i> Annulla
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
            // Inizializza Select2
            $('#secondaParte').select2({
                theme: 'bootstrap-5',
                placeholder: "Seleziona un comune o inserisci l'azienda del contatto",
                allowClear: true
            });

            // Abilita la validazione del form
            $("#formContatto").validate({
                rules: {
                    NumeroContatto: {
                        required: true,
                        pattern: /^\d{1,15}$/
                    },
                    RagioneSociale: {
                        required: true
                    },
                    Citta: {
                        pattern: /^[A-Za-z\s']+$/
                    },
                    Interno: {
                        required: true
                    }
                },
                messages: {
                    NumeroContatto: {
                        required: "Il numero di contatto è obbligatorio",
                        pattern: "Inserire solo numeri (max 15 cifre)"
                    },
                    RagioneSociale: {
                        required: "La ragione sociale è obbligatoria"
                    },
                    Citta: {
                        pattern: "Inserire solo lettere, senza numeri"
                    },
                    Interno: {
                        required: "Specificare se il numero è interno o esterno"
                    }
                }
            });

            // Gestisci il cambio di opzione "Inserisci testo personalizzato"
            $('#secondaParte').on('change', function() {
                if ($(this).val() === 'custom') {
                    $(this).select2('destroy');
                    $(this).replaceWith('<input type="text" id="secondaParte" class="form-control" placeholder="Inserisci testo personalizzato" />');
                }
            });

            // Aggiorna il campo nascosto quando cambiano i valori
            function aggiornaRagioneSociale() {
                const primaParte = $('#primaParte').val().trim();
                const secondaParte = $('#secondaParte').val().trim();
                
                if (primaParte && secondaParte) {
                    // Se la seconda parte è un input personalizzato o un comune, aggiungi sempre il trattino
                    $('#ragioneSocialeCompleta').val(`${primaParte} - ${secondaParte}`);
                } else if (primaParte) {
                    $('#ragioneSocialeCompleta').val(primaParte);
                } else {
                    $('#ragioneSocialeCompleta').val('');
                }
            }

            // Aggiungi gli event listener
            $('#primaParte, #secondaParte').on('input change', aggiornaRagioneSociale);

            // Se c'è un valore iniziale, dividilo e imposta i campi
            const ragioneSocialeIniziale = $('#ragioneSocialeCompleta').val();
            if (ragioneSocialeIniziale) {
                const parti = ragioneSocialeIniziale.split(' - ');
                if (parti.length > 1) {
                    $('#primaParte').val(parti[0]);
                    // Cerca il valore corretto nel select
                    const comuneValue = parti[1];
                    const option = $('#secondaParte option').filter(function() {
                        return $(this).val() === comuneValue;
                    });
                    if (option.length) {
                        $('#secondaParte').val(comuneValue).trigger('change');
                    } else {
                        // Se non trova il comune, imposta come testo personalizzato
                        $('#secondaParte').val('custom').trigger('change');
                        setTimeout(() => {
                            $('#secondaParte').val(comuneValue);
                        }, 100);
                    }
                } else {
                    $('#primaParte').val(ragioneSocialeIniziale);
                }
            }

            // Aggiungi una regola personalizzata per la ragione sociale
            $.validator.addMethod("customRagioneSociale", function(value, element) {
                const secondaParte = $('#secondaParte').val();
                // Se è un input di testo personalizzato, non applicare il formato specifico
                if (secondaParte === 'custom' || !secondaParte.startsWith('Comune di')) {
                    return true;
                }
                // Altrimenti verifica il formato standard
                return value.includes(' - Comune di');
            }, "La ragione sociale deve essere nel formato 'ragioneSociale - Comune di PaeseX'");

            // Aggiorna la validazione quando cambia il tipo di input
            $('#secondaParte').on('input change', function() {
                $('#ragioneSocialeCompleta').valid();
            });

            // Previeni l'inserimento di caratteri non numerici nel campo numero
            $("#NumeroContatto").on("input", function() {
                this.value = this.value.replace(/[^\d]/g, '');
                if (this.value.length > 15) {
                    this.value = this.value.slice(0, 15);
                }
            });

            // Previeni l'inserimento di numeri nel campo città
            $("#Citta").on("input", function() {
                this.value = this.value.replace(/[0-9]/g, '');
            });

            function confermaEliminazione(numero) {
                if (confirm('Sei sicuro di voler eliminare questo contatto?')) {
                    var password = prompt('Inserisci la password per confermare l\'eliminazione:');
                    if (password) {
                        var form = document.createElement('form');
                        form.method = 'POST';
                        form.action = '@Url.Action("Elimina", "GestioneContatti")';

                        var numeroInput = document.createElement('input');
                        
                        numeroInput.type = 'hidden';
                        numeroInput.name = 'numero';
                        numeroInput.value = numero;

                        var passwordInput = document.createElement('input');
                        passwordInput.type = 'hidden';
                        passwordInput.name = 'password';
                        passwordInput.value = password;

                        form.appendChild(numeroInput);
                        form.appendChild(passwordInput);
                        document.body.appendChild(form);
                        form.submit();
                    }
                }
            }
        });
    </script>
}
