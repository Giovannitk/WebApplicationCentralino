@model WebApplicationCentralino.Models.ContactStatistics
@{
    ViewData["Title"] = $"Statistiche - {Model.RagioneSociale}";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Statistiche Contatto: @Model.RagioneSociale</h2>
        <div>
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Torna alla Home
            </a>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Filtri</h5>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <input type="hidden" name="numeroContatto" value="@ViewBag.NumeroContatto">
                <div class="col-md-4">
                    <label for="dateFrom" class="form-label">Data da:</label>
                    <input type="date" id="dateFrom" name="dateFrom" class="form-control" min="2020-01-01" value="@ViewBag.DateFrom">
                </div>
                <div class="col-md-4">
                    <label for="dateTo" class="form-label">Data a:</label>
                    <input type="date" id="dateTo" name="dateTo" class="form-control" min="2020-01-01" value="@ViewBag.DateTo">
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-filter"></i> Applica Filtri
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Riepilogo Generale -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Chiamate in Entrata</h5>
                    <h2 class="card-text">@Model.ChiamateInEntrata</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Chiamate in Uscita</h5>
                    <h2 class="card-text">@Model.ChiamateInUscita</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <h5 class="card-title">Durata Totale</h5>
                    <h2 class="card-text">@FormatDuration(Model.DurataTotaleChiamate)</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Durata Media</h5>
                    <h2 class="card-text">@FormatDuration(Model.DurataMediaChiamate)</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Grafici -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Andamento Giornaliero</h5>
                </div>
                <div class="card-body">
                    <div style="height: 300px;">
                        <canvas id="giornoChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Distribuzione Oraria</h5>
                </div>
                <div class="card-body">
                    <div style="height: 300px;">
                        <canvas id="oraChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Nuove statistiche basate sulla locazione -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Distribuzione per Locazione Chiamante</h5>
                </div>
                <div class="card-body">
                    <div style="height: 300px;">
                        <canvas id="locazioneChiamanteChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Distribuzione per Locazione Chiamato</h5>
                </div>
                <div class="card-body">
                    <div style="height: 300px;">
                        <canvas id="locazioneChiamatoChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Top chiamanti e chiamati per locazione -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Top Chiamanti per Locazione</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Numero</th>
                                    <th>Ragione Sociale</th>
                                    <th>Locazione</th>
                                    <th>Chiamate</th>
                                    <th>Durata Totale</th>
                                    <th>Durata Media</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var chiamante in Model.TopChiamantiPerLocazione)
                                {
                                    <tr>
                                        <td>@chiamante.Numero</td>
                                        <td>@chiamante.RagioneSociale</td>
                                        <td>@chiamante.Locazione</td>
                                        <td>@chiamante.NumeroChiamate</td>
                                        <td>@FormatDuration(chiamante.DurataTotale)</td>
                                        <td>@FormatDuration(chiamante.DurataMedia)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Top Chiamati per Locazione</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Numero</th>
                                    <th>Ragione Sociale</th>
                                    <th>Locazione</th>
                                    <th>Chiamate</th>
                                    <th>Durata Totale</th>
                                    <th>Durata Media</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var chiamato in Model.TopChiamatiPerLocazione)
                                {
                                    <tr>
                                        <td>@chiamato.Numero</td>
                                        <td>@chiamato.RagioneSociale</td>
                                        <td>@chiamato.Locazione</td>
                                        <td>@chiamato.NumeroChiamate</td>
                                        <td>@FormatDuration(chiamato.DurataTotale)</td>
                                        <td>@FormatDuration(chiamato.DurataMedia)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Ultime Chiamate -->
    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Ultime 10 Chiamate</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Data</th>
                            <th>Tipo</th>
                            <th>Numero</th>
                            <th>Ragione Sociale</th>
                            <th>Durata</th>
                            <th>Locazione</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var chiamata in Model.UltimeChiamate)
                        {
                            <tr>
                                <td>@chiamata.DataArrivoChiamata.ToString("dd/MM/yyyy HH:mm:ss")</td>
                                <td>
                                    <span class="badge @(chiamata.NumeroChiamato == Model.Numero ? "bg-success" : "bg-primary")">
                                        @(chiamata.NumeroChiamato == Model.Numero ? "In Entrata" : "In Uscita")
                                    </span>
                                </td>
                                <td>@(chiamata.NumeroChiamato == Model.Numero ? chiamata.NumeroChiamante : chiamata.NumeroChiamato)</td>
                                <td>@(chiamata.NumeroChiamato == Model.Numero ? chiamata.RagioneSocialeChiamante : chiamata.RagioneSocialeChiamato)</td>
                                <td>@FormatDuration(chiamata.Durata.TotalSeconds)</td>
                                <td>@(chiamata.NumeroChiamato == Model.Numero ? (chiamata.Locazione ?? "-") : (chiamata.LocazioneChiamato ?? "-"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Stili per la visualizzazione responsive delle tabelle */
        .table-responsive {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }
        
        /* Stili per le celle della tabella */
        .table td, .table th {
            white-space: nowrap;
            padding: 0.5rem;
        }
        
        /* Stili per il testo lungo nelle celle */
        .table td {
            max-width: 200px;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        /* Stili per i badge */
        .badge {
            white-space: nowrap;
        }
        
        /* Stili per la visualizzazione su dispositivi mobili */
        @@media (max-width: 768px) {
            .table-responsive {
                margin-bottom: 1rem;
            }
            
            .table th,
            .table td {
                font-size: 0.9rem;
            }
        }
    </style>
    <script>
        $(document).ready(function() {
            // Funzione per gestire date non valide
            function fixInvalidDate(input) {
                if (!input.value) return;

                const parts = input.value.split("-");
                if (parts.length !== 3) return;

                let year = parseInt(parts[0], 10);
                const currentYear = new Date().getFullYear();

                if (isNaN(year) || year < 2020) {
                    parts[0] = currentYear;
                    input.value = parts.join("-");
                }
            }

            // Aggiungi event listeners per i campi data
            $('#dateFrom, #dateTo').on('change blur', function() {
                fixInvalidDate(this);
            });

            // Dati per i grafici
            const giornoData = {
                labels: @Html.Raw(Json.Serialize(Model.ChiamatePerGiorno.Keys)),
                datasets: [{
                    label: 'Numero Chiamate',
                    data: @Html.Raw(Json.Serialize(Model.ChiamatePerGiorno.Values)),
                    borderColor: '#4e73df',
                    backgroundColor: 'rgba(78, 115, 223, 0.1)',
                    fill: true
                }]
            };

            const oraData = {
                labels: @Html.Raw(Json.Serialize(Model.ChiamatePerOra.Keys)),
                datasets: [{
                    label: 'Numero Chiamate',
                    data: @Html.Raw(Json.Serialize(Model.ChiamatePerOra.Values)),
                    borderColor: '#1cc88a',
                    backgroundColor: 'rgba(28, 200, 138, 0.1)',
                    fill: true
                }]
            };

            // Configurazione dei grafici
            new Chart(
                document.getElementById('giornoChart'),
                {
                    type: 'line',
                    data: giornoData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        }
                    }
                }
            );

            new Chart(
                document.getElementById('oraChart'),
                {
                    type: 'line',
                    data: oraData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        }
                    }
                }
            );

            // Nuovi grafici per la distribuzione per locazione
            const locazioneChiamanteData = {
                labels: @Html.Raw(Json.Serialize(Model.ChiamatePerLocazioneChiamante.Keys)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.ChiamatePerLocazioneChiamante.Values)),
                    backgroundColor: [
                        '#28a745', '#20c997', '#17a2b8', '#ffc107', '#dc3545', '#6f42c1', '#fd7e14', '#e83e8c'
                    ]
                }]
            };

            const locazioneChiamatoData = {
                labels: @Html.Raw(Json.Serialize(Model.ChiamatePerLocazioneChiamato.Keys)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.ChiamatePerLocazioneChiamato.Values)),
                    backgroundColor: [
                        '#28a745', '#20c997', '#17a2b8', '#ffc107', '#dc3545', '#6f42c1', '#fd7e14', '#e83e8c'
                    ]
                }]
            };

            new Chart(
                document.getElementById('locazioneChiamanteChart'),
                {
                    type: 'pie',
                    data: locazioneChiamanteData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right',
                                labels: {
                                    boxWidth: 15,
                                    font: {
                                        size: 12
                                    }
                                }
                            }
                        }
                    }
                }
            );

            new Chart(
                document.getElementById('locazioneChiamatoChart'),
                {
                    type: 'pie',
                    data: locazioneChiamatoData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right',
                                labels: {
                                    boxWidth: 15,
                                    font: {
                                        size: 12
                                    }
                                }
                            }
                        }
                    }
                }
            );
        });
    </script>
}

@functions {
    public string FormatDuration(double seconds)
    {
        if (seconds < 60)
        {
            return $"{seconds:N0} sec";
        }
        
        int totalSeconds = (int)seconds;
        int hours = totalSeconds / 3600;
        int minutes = (totalSeconds % 3600) / 60;
        int remainingSeconds = totalSeconds % 60;
        
        if (hours > 0)
        {
            return $"{hours}h {minutes}m {remainingSeconds}s";
        }
        else if (minutes > 0)
        {
            return $"{minutes}m {remainingSeconds}s";
        }
        else
        {
            return $"{remainingSeconds}s";
        }
    }
} 